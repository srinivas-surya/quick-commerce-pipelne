services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    ports:
      - "9092:9092"
      - "29092:29092"

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=quickcommerce
    volumes:
      - mysql_data:/var/lib/mysql
      - ./samples/orders_sample.csv:/docker-entrypoint-initdb.d/orders_sample.csv:ro
      - ./scripts/mysql_init.sql:/docker-entrypoint-initdb.d/001_init.sql:ro
    ports:
      - "3306:3306"

  mongo:
    image: mongo:6
    volumes:
      - mongo_data:/data/db
      - ./samples/inventory_sample.json:/docker-entrypoint-initdb.d/inventory_sample.json:ro
      - ./scripts/mongo_init.js:/docker-entrypoint-initdb.d/001_init.js:ro
    ports:
      - "27017:27017"

  airflow-init:
    image: apache/airflow:2.9.2
    entrypoint: /bin/bash
    environment:
      - AIRFLOW_UID=50000
    command:
      - -c
      - |
        mkdir -p /sources/dags
        chown -R "50000:0" /sources
        airflow db init
        airflow users create --role Admin --username airflow --password airflow --firstname Air --lastname Flow --email admin@example.com
    volumes:
      - ./airflow_dags:/sources/dags

  airflow-webserver:
    image: apache/airflow:2.9.2
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW_UID=50000
    command: webserver
    ports:
      - "8080:8080"
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./:/opt/project
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    image: apache/airflow:2.9.2
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_UID=50000
    command: scheduler
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./:/opt/project

  spark-master:
    image: bitnami/spark:3.5
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8080"
    volumes:
      - ./:/project

  spark-worker:
    image: bitnami/spark:3.5
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./:/project

  prometheus:
    image: prom/prometheus:v2.53.0
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.1.0
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  mysql_data:
  mongo_data:
  grafana_data:
